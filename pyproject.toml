[build-system]
requires = ["setuptools",]
build-backend = "setuptools.build_meta"

[tool.coverage.report]
exclude_lines = ["pragma: no cover", "if __name__ = .__main__.", "if TYPE_CHECKING:"]
show_missing = true
skip_empty = true

[tool.pytest.ini_options]
addopts = "--durations=10 -vv --color=yes"
minversion = "6.0"
testpaths = ["tests/"]
# These are warnings emitted by dependencies and most likely caused by
# the custom building and pip installings.
filterwarnings = [
  "error",
  "ignore::DeprecationWarning",
  "ignore::ImportWarning",
  "ignore::RuntimeWarning",
  "ignore::FutureWarning",
  "ignore::UserWarning",
]

[tool.ruff]
lint.ignore = [
  "D105",     # Missing docstring in magic method (overkill to document __str__ and __repr__...)
  "D401",     # First line of docstring should be in imperative mood
  "E712",     # true-false-comparison (don't touch this in case we are using bool values with pandas/numpy)
  "ISC001",   # single-line-implicit-string-concatenation (conflicts with the format rules)
  "N818",     # Exception name `*` should be named with an Error suffix
  "PERF203",  # `try`-`except` within a loop incurs performance overhead
  "PLR2004",  # Magic value used in comparison, consider replacing {value} with a constant variable
  "UP015",    # Unnecessary open mode parameters (I think specifying open mode is good)
  "W505",     # Doc line too long (annoying because we have long URLs)
]
lint.ignore-init-module-imports = true
line-length = 110
# See here for all rules: https://beta.ruff.rs/docs/rules/#rules
lint.select = [
  "A",     # flake8-builtins
  "B",     # flake8-bugbear
  "C4",    # flake8-comprehensions
  "C90",   # mccabe
  "D",     # pydocstyle
  "E",     # pycodestyle - error
  "F",     # pyflakes
  "I",     # isort
  "ISC",   # flake8-implicit-str-concat
  "N",     # pep8-naming
  "NPY",   # NumPy-specific rules
  "PD",    # pandas-vet
  "PERF",  # perflint
  "PLE",   # pylint - errors
  "PLW",   # pylint - warnings
  "RUF",   # ruff-specific
  "UP",    # pyupgrade
  "W",     # pycodestyle - warning
]
src = ["src/", "tests/"]
target-version = "py310"

[tool.ruff.lint.per-file-ignores]
# Allow unused imports in __init__.py files
"*__init__.py" = ["F401"]
# Allow test init files to be empty.
"tests/*__init__.py" = ["D104", "F401"]
# Tests are allowed to have:
# - odd var names (N803, N802)
# - too many statements (E501, PLR0915)
# - blank line between summary line and description (D205)
#     - sometimes test descriptions need to be long.
"tests/**/*" = ["N802", "N803", "E501", "PLR0915", "D205"]

[tool.ruff.format]
indent-style = "space"
line-ending = "lf"
quote-style = "double"
skip-magic-trailing-comma = false

[tool.ruff.lint.isort]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
known-local-folder = ["deepjoint_torch"]
lines-after-imports = 2
lines-between-types = 1

[tool.ruff.lint.mccabe]
max-complexity = 15

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.pylint]
max-args=12
max-branches=17
max-statements=60
